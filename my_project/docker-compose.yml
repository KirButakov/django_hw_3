version: '3.8'

services:
  db:
    image: postgres:15
    container_name: postgres_db
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $$DB_USER -d $$DB_NAME" ]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:latest
    container_name: nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./static:/static
      - ./media:/media
    depends_on:
      backend:
        condition: service_started

  redis:
    image: redis:7
    container_name: redis
    restart: always
    ports:
      - "6379:6379"

  backend:
    build: .
    container_name: django_backend
    restart: always
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - DJANGO_SECRET_KEY=DiUv1mw-TXeIgQ3Bho7IOnRf7xRa3nUvpiGxxrZju2XQHGt2T5rD2ufyEawusmumf58
      - ALLOWED_HOSTS=127.0.0.1,localhost,django_backend,172.19.0.4,*
    volumes:
      - .:/app
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             python manage.py runserver 0.0.0.0:8000"

  celery:
    build: .
    container_name: celery_worker
    restart: always
    depends_on:
      backend:
        condition: service_started
    volumes:
      - .:/app
    command: celery -A my_project worker --loglevel=info

  celery_beat:
    build: .
    container_name: celery_beat
    restart: always
    depends_on:
      backend:
        condition: service_started
    volumes:
      - .:/app
    command: celery -A my_project beat --loglevel=info

volumes:
  pg_data:





