name: Django CI/CD

on:
  push:
    branches:
      - homework

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        working-directory: my_project
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests with SQLite
        working-directory: my_project
        env:
          DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
        run: python manage.py test

  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to server
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.HOST_1994 }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "==== Setting up project directory ===="
            PROJECT_DIR="$HOME/django_hw_3/my_project"

            cd "$PROJECT_DIR" || { echo "Project directory not found! Exiting..."; exit 1; }

            echo "==== Checking Git status ===="
            git status

            echo "==== Pulling latest changes ===="
            git pull origin homework

            echo "==== Checking for docker-compose.yml ===="
            if [ ! -f "$PROJECT_DIR/docker-compose.yml" ]; then
              echo "Error: docker-compose.yml not found!"
              exit 1
            fi

            echo "==== Stopping existing containers ===="
            docker-compose down || echo "No containers running."

            echo "==== Pulling updated Docker images ===="
            docker-compose pull

            echo "==== Starting Docker containers ===="
            docker-compose up --build -d

            echo "==== Running database migrations ===="
            docker exec -i my_project_web python manage.py migrate || { echo "Migration failed!"; exit 1; }

            echo "==== Collecting static files ===="
            docker exec -i my_project_web python manage.py collectstatic --noinput || { echo "Collectstatic failed!"; exit 1; }

            echo "==== Cleaning up unused Docker images ===="
            docker system prune -af || echo "Cleanup failed, continuing..."








