name: CI/CD Pipeline

on:
  push:
    branches:
      - homework

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          python -m pytest  # Замени на команду для запуска тестов

  deploy:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to server
        env:
          HOST: ${{ secrets.HOST_1994 }}  # IP сервера
          USER: ${{ secrets.USER }}  # Пользователь для деплоя
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}  # SSH-ключ
          DEPLOY_PATH: "/home/${{ secrets.USER }}/django_hw_3/my_project"  # Папка на сервере
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H $HOST >> ~/.ssh/known_hosts
          
          echo "==== Синхронизация кода ===="
          rsync -avz --delete ./ $USER@$HOST:$DEPLOY_PATH

          echo "==== Запуск Docker ===="
          ssh $USER@$HOST << 'EOF'
            cd $DEPLOY_PATH

            echo "==== Остановка старых контейнеров ===="
            docker-compose down || echo "Контейнеры уже остановлены."

            echo "==== Обновление образов ===="
            docker-compose pull

            echo "==== Запуск контейнеров ===="
            docker-compose up --build -d

            echo "==== Миграции Django ===="
            docker exec -i my_project_web python manage.py migrate || { echo "Ошибка миграции!"; exit 1; }

            echo "==== Сбор статических файлов ===="
            docker exec -i my_project_web python manage.py collectstatic --noinput || { echo "Ошибка collectstatic!"; exit 1; }

            echo "==== Очистка старых образов ===="
            docker system prune -af || echo "Ошибка очистки, продолжаем..."
          EOF









